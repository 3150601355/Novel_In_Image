# -*- coding: utf-8 -*-
from PyQt5.QtCore import QCoreApplication, QMetaObject, QRect, QUrl, Qt 
from PyQt5.QtGui import QFont
from PyQt5.QtWidgets import QApplication, QFrame, QLabel, QLineEdit, QListWidget, QListWidgetItem, QMainWindow, QMessageBox, QPushButton, QSizePolicy, QStackedWidget, QStatusBar, QTabWidget, QWidget 
from PIL.Image import new
from PIL.Image import open as ImOpen
from math import ceil
from sys import exit, argv


class _NII_GuiWindow(object):
    def __init__(self):
        self.app = QApplication(argv)
        self.window = QMainWindow()
        self.setupUi(self.window)

    def setupUi(self, NII_GuiWindow):
        NII_GuiWindow.setObjectName("NII_GuiWindow")
        NII_GuiWindow.resize(1024, 768)
        self.Central = QWidget(NII_GuiWindow)
        self.Central.setObjectName("Central")
        self.Main = QTabWidget(self.Central)
        self.Main.setGeometry(QRect(0, 0, 1024, 768))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Main.sizePolicy().hasHeightForWidth())

        JBI16 = QFont()
        JBI16.setFamily("JetBrains Mono")
        JBI16.setPointSize(16)
        JBI16.setBold(True)
        JBI16.setItalic(True)
        JBI16.setWeight(75)

        JBI12 = QFont()
        JBI12.setFamily("JetBrains Mono")
        JBI12.setPointSize(12)
        JBI12.setBold(True)
        JBI12.setItalic(True)
        JBI12.setWeight(75)

        K12 = QFont()
        K12.setFamily('楷体')
        K12.setPointSize(12)
        K12.setBold(False)
        K12.setItalic(False)
        K12.setWeight(50)

        self.Main.setSizePolicy(sizePolicy)
        self.Main.setFont(JBI16)
        self.Main.setObjectName("Main")
        self.encTab = QWidget()
        self.encTab.setFont(JBI12)
        self.encTab.setFocusPolicy(Qt.NoFocus)
        self.encTab.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.encTab.setObjectName("encTab")
        self.encFilePath = QLineEdit(self.encTab)
        self.encFilePath.setGeometry(QRect(60, 210, 400, 50))
        self.encFilePath.setFont(K12)
        self.encFilePath.setText("")
        self.encFilePath.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.encFilePath.setObjectName("encFilePath")
        self.encOutPath = QLineEdit(self.encTab)
        self.encOutPath.setGeometry(QRect(60, 360, 400, 50))
        self.encOutPath.setFont(K12)
        self.encOutPath.setText("")
        self.encOutPath.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.encOutPath.setObjectName("encOutPath")
        self.encButton = QPushButton(self.encTab)
        self.encButton.setGeometry(QRect(150, 500, 180, 50))
        self.encButton.setFont(JBI16)
        self.encButton.setObjectName("encButton")
        self.encLine = QFrame(self.encTab)
        self.encLine.setGeometry(QRect(500, 20, 3, 700))
        self.encLine.setFrameShape(QFrame.VLine)
        self.encLine.setFrameShadow(QFrame.Sunken)
        self.encLine.setObjectName("encLine")
        self.encNotice = QListWidget(self.encTab)
        self.encNotice.setGeometry(QRect(540, 90, 450, 500))
        self.encNotice.setObjectName("encNotice")
        item = QListWidgetItem()
        item.setFont(K12)
        self.encNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.encNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.encNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.encNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.encNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.encNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.encNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.encNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.encNotice.addItem(item)
        self.Main.addTab(self.encTab, "")
        self.decTab = QWidget()
        self.decTab.setObjectName("decTab")
        self.decFilePath = QLineEdit(self.decTab)
        self.decFilePath.setGeometry(QRect(60, 360, 400, 50))
        self.decFilePath.setFont(K12)
        self.decFilePath.setText("")
        self.decFilePath.setObjectName("decFilePath")
        self.decOutPath = QLineEdit(self.decTab)
        self.decOutPath.setGeometry(QRect(60, 210, 400, 50))
        self.decOutPath.setFont(K12)
        self.decOutPath.setText("")
        self.decOutPath.setObjectName("decOutPath")
        self.decButton = QPushButton(self.decTab)
        self.decButton.setGeometry(QRect(150, 500, 180, 50))
        self.decButton.setObjectName("decButton")
        self.decLine = QFrame(self.decTab)
        self.decLine.setGeometry(QRect(500, 20, 3, 700))
        self.decLine.setFrameShape(QFrame.VLine)
        self.decLine.setFrameShadow(QFrame.Sunken)
        self.decLine.setObjectName("decLine")
        self.decNotice = QListWidget(self.decTab)
        self.decNotice.setGeometry(QRect(540, 90, 450, 500))
        self.decNotice.setObjectName("decNotice")
        item = QListWidgetItem()
        item.setFont(K12)
        self.decNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.decNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.decNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.decNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.decNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.decNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.decNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.decNotice.addItem(item)
        item = QListWidgetItem()
        item.setFont(K12)
        self.decNotice.addItem(item)
        self.Main.addTab(self.decTab, "")
        self.aboutTab = QWidget()
        self.aboutTab.setObjectName("aboutTab")
        self.mihuValue = QLineEdit(self.aboutTab)
        self.mihuValue.setGeometry(QRect(230, 290, 280, 25))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mihuValue.sizePolicy().hasHeightForWidth())
        self.mihuValue.setSizePolicy(sizePolicy)
        self.mihuValue.setFont(JBI16)
        self.mihuValue.setFocusPolicy(Qt.NoFocus)
        self.mihuValue.setAlignment(Qt.AlignCenter)
        self.mihuValue.setObjectName("mihuValue")
        self.guiValue = QLineEdit(self.aboutTab)
        self.guiValue.setGeometry(QRect(660, 290, 280, 25))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.guiValue.sizePolicy().hasHeightForWidth())
        self.guiValue.setSizePolicy(sizePolicy)
        self.guiValue.setFont(JBI16)
        self.guiValue.setFocusPolicy(Qt.NoFocus)
        self.guiValue.setAlignment(Qt.AlignCenter)
        self.guiValue.setObjectName("guiValue")
        self.licenseValue = QLineEdit(self.aboutTab)
        self.licenseValue.setGeometry(QRect(230, 390, 280, 25))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.licenseValue.sizePolicy().hasHeightForWidth())
        self.licenseValue.setSizePolicy(sizePolicy)
        self.licenseValue.setFont(JBI16)
        self.licenseValue.setFocusPolicy(Qt.NoFocus)
        self.licenseValue.setAlignment(Qt.AlignCenter)
        self.licenseValue.setObjectName("licenseValue")
        self.mhKey = QLabel(self.aboutTab)
        self.mhKey.setGeometry(QRect(550, 340, 120, 20))
        self.mhKey.setFont(K12)
        self.mhKey.setObjectName("mhKey")
        self.mhValue = QLineEdit(self.aboutTab)
        self.mhValue.setGeometry(QRect(660, 340, 280, 25))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mhValue.sizePolicy().hasHeightForWidth())
        self.mhValue.setSizePolicy(sizePolicy)
        self.mhValue.setFont(JBI16)
        self.mhValue.setFocusPolicy(Qt.NoFocus)
        self.mhValue.setAlignment(Qt.AlignCenter)
        self.mhValue.setObjectName("mhValue")
        self.verKey = QLabel(self.aboutTab)
        self.verKey.setGeometry(QRect(580, 390, 50, 20))
        self.verKey.setFont(K12)
        self.verKey.setObjectName("verKey")
        self.itemKey = QLabel(self.aboutTab)
        self.itemKey.setGeometry(QRect(130, 240, 80, 20))
        self.itemKey.setFont(K12)
        self.itemKey.setObjectName("itemKey")
        self.licenseKey = QLabel(self.aboutTab)
        self.licenseKey.setGeometry(QRect(128, 390, 70, 20))
        self.licenseKey.setFont(K12)
        self.licenseKey.setObjectName("licenseKey")
        self.pyKey = QLabel(self.aboutTab)
        self.pyKey.setGeometry(QRect(55, 340, 150, 20))
        self.pyKey.setFont(K12)
        self.pyKey.setObjectName("pyKey")
        self.mihuKey = QLabel(self.aboutTab)
        self.mihuKey.setGeometry(QRect(160, 290, 55, 20))
        self.mihuKey.setFont(K12)
        self.mihuKey.setObjectName("mihuKey")
        self.date = QLabel(self.aboutTab)
        self.date.setGeometry(QRect(810, 610, 120, 20))
        self.date.setFont(JBI16)
        self.date.setLayoutDirection(Qt.LeftToRight)
        self.date.setObjectName("date")
        self.pyValue = QLineEdit(self.aboutTab)
        self.pyValue.setGeometry(QRect(230, 340, 280, 25))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pyValue.sizePolicy().hasHeightForWidth())
        self.pyValue.setSizePolicy(sizePolicy)
        self.pyValue.setFont(JBI16)
        self.pyValue.setFocusPolicy(Qt.NoFocus)
        self.pyValue.setAlignment(Qt.AlignCenter)
        self.pyValue.setObjectName("pyValue")
        self.guiKey = QLabel(self.aboutTab)
        self.guiKey.setGeometry(QRect(580, 290, 60, 20))
        self.guiKey.setFont(K12)
        self.guiKey.setObjectName("guiKey")
        self.spaceKey = QLabel(self.aboutTab)
        self.spaceKey.setGeometry(QRect(130, 200, 80, 20))
        self.spaceKey.setFont(K12)
        self.spaceKey.setObjectName("spaceKey")
        self.verValue = QLineEdit(self.aboutTab)
        self.verValue.setGeometry(QRect(660, 390, 280, 25))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.verValue.sizePolicy().hasHeightForWidth())
        self.verValue.setSizePolicy(sizePolicy)
        self.verValue.setFont(JBI16)
        self.verValue.setFocusPolicy(Qt.NoFocus)
        self.verValue.setAlignment(Qt.AlignCenter)
        self.verValue.setObjectName("verValue")
        self.itemValue = QLineEdit(self.aboutTab)
        self.itemValue.setGeometry(QRect(230, 240, 710, 25))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemValue.sizePolicy().hasHeightForWidth())
        self.itemValue.setSizePolicy(sizePolicy)
        self.itemValue.setFont(JBI16)
        self.itemValue.setFocusPolicy(Qt.NoFocus)
        self.itemValue.setAlignment(Qt.AlignCenter)
        self.itemValue.setObjectName("itemValue")
        self.spaceValue = QLineEdit(self.aboutTab)
        self.spaceValue.setGeometry(QRect(230, 200, 711, 25))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spaceValue.sizePolicy().hasHeightForWidth())
        self.spaceValue.setSizePolicy(sizePolicy)
        self.spaceValue.setFont(JBI16)
        self.spaceValue.setFocusPolicy(Qt.NoFocus)
        self.spaceValue.setAlignment(Qt.AlignCenter)
        self.spaceValue.setObjectName("spaceValue")
        self.Main.addTab(self.aboutTab, "")
        NII_GuiWindow.setCentralWidget(self.Central)

        self.encButton.clicked.connect(self.encode)
        self.decButton.clicked.connect(self.decode)

        self.retranslateUi(NII_GuiWindow)
        self.Main.setCurrentIndex(0)
        QMetaObject.connectSlotsByName(NII_GuiWindow)

    def retranslateUi(self, NII_GuiWindow):
        _translate = QCoreApplication.translate
        NII_GuiWindow.setWindowTitle(_translate("NII_GuiWindow", "MainWindow"))
        self.encFilePath.setPlaceholderText(_translate("NII_GuiWindow", "在此处输入待编码文件绝对路径"))
        self.encOutPath.setPlaceholderText(_translate("NII_GuiWindow", "在此处输入编码后图片存储绝对路径"))
        self.encButton.setText(_translate("NII_GuiWindow", "encode"))
        __sortingEnabled = self.encNotice.isSortingEnabled()
        self.encNotice.setSortingEnabled(False)
        self.encNotice.item(0).setText(_translate("NII_GuiWindow", "注意事项"))
        self.encNotice.item(2).setText(_translate("NII_GuiWindow", "+ 待编码文件需要绝对路径,要带后缀."))
        self.encNotice.item(4).setText(_translate("NII_GuiWindow", "+ 文件如果与程序在同一目录下可以直接输入文件名."))
        self.encNotice.item(6).setText(_translate("NII_GuiWindow", "+ 编码后文件绝对路径,需要输入文件名与后缀,最好用bmp/png"))
        self.encNotice.item(8).setText(_translate("NII_GuiWindow", "+ 注意输入路径时使用/分隔,\\会导致字符串转义"))
        self.encNotice.setSortingEnabled(__sortingEnabled)
        self.Main.setTabText(self.Main.indexOf(self.encTab), _translate("NII_GuiWindow", "Encode"))
        self.decFilePath.setPlaceholderText(_translate("NII_GuiWindow", "在此处输入编码后的图片绝对路径"))
        self.decOutPath.setPlaceholderText(_translate("NII_GuiWindow", "在此处输入解码图片后文件的的绝对存储路径"))
        self.decButton.setText(_translate("NII_GuiWindow", "decode"))
        __sortingEnabled = self.decNotice.isSortingEnabled()
        self.decNotice.setSortingEnabled(False)
        self.decNotice.item(0).setText(_translate("NII_GuiWindow", "注意事项"))
        self.decNotice.item(2).setText(_translate("NII_GuiWindow", "+ 编码后图片绝对路径是文件,需要后缀"))
        self.decNotice.item(4).setText(_translate("NII_GuiWindow", "+ 如果文件与程序处于同一目录下可以直接输入文件名"))
        self.decNotice.item(6).setText(_translate("NII_GuiWindow", "+ 解码后文件的绝对存储路径需要带有文件名与后缀"))
        self.decNotice.item(8).setText(_translate("NII_GuiWindow", "+ 注意输入路径时使用/分隔,\\会导致字符串转义"))
        self.decNotice.setSortingEnabled(__sortingEnabled)
        self.Main.setTabText(self.Main.indexOf(self.decTab), _translate("NII_GuiWindow", "Decode"))
        self.mihuValue.setText(_translate("NII_GuiWindow", "bili.uid.39665558"))
        self.guiValue.setText(_translate("NII_GuiWindow", "bili.uid.336609200"))
        self.licenseValue.setText(_translate("NII_GuiWindow", "GPL2.0"))
        self.mhKey.setText(_translate("NII_GuiWindow", "作者灵感:"))
        self.mhValue.setText(_translate("NII_GuiWindow", "minecrafthu_hei"))
        self.verKey.setText(_translate("NII_GuiWindow", "版本:"))
        self.itemKey.setText(_translate("NII_GuiWindow", "开源项目:"))
        self.licenseKey.setText(_translate("NII_GuiWindow", "开源协议:"))
        self.pyKey.setText(_translate("NII_GuiWindow", "迷糊老师.py交易群:"))
        self.mihuKey.setText(_translate("NII_GuiWindow", "作者:"))
        self.date.setText(_translate("NII_GuiWindow", "2020.7.8"))
        self.pyValue.setText(_translate("NII_GuiWindow", "QQ.597427692"))
        self.guiKey.setText(_translate("NII_GuiWindow", "界面:"))
        self.spaceKey.setText(_translate("NII_GuiWindow", "作者主页:"))
        self.verValue.setText(_translate("NII_GuiWindow", "0.21"))
        self.itemValue.setText(_translate("NII_GuiWindow", "https://github.com/3150601355/Novel_In_Image"))
        self.spaceValue.setText(_translate("NII_GuiWindow", "https://space.bilibili.com/39665558/"))
        self.Main.setTabText(self.Main.indexOf(self.aboutTab), _translate("NII_GuiWindow", "About"))

    def encode(self):
        try:
            encFilePath = self.encFilePath.text()
            encOutPath = self.encOutPath.text()

            with open(encFilePath, encoding="utf-8") as f:
                all_text = f.read()

            str_len = len(all_text)
            width = ceil(str_len**0.5)
            im = new("RGB", (width, width), 0x0)

            x, y = 0, 0
            for i in all_text:
                index = ord(i)
                rgb = ( 0,  (index & 0xFF00) >> 8,  index & 0xFF)
                im.putpixel( (x, y),  rgb )
                if x == width - 1:
                    x = 0
                    y += 1
                else:
                    x += 1

            im.save(encOutPath)

            QMessageBox.about(self.window, "编码成功", "已成功进行编码")
        except:
            QMessageBox.critical(self.window, "编码失败", "出现错误")

    def decode(self):
        try:
            decFilePath = self.decFilePath.text()
            decOutPath = self.decOutPath.text()

            im = ImOpen(decFilePath)

            width, height = im.size
            lst = [ ]
            for y in range(height):
                for x in range(width):
                    red, green, blue = im.getpixel((x, y))
                    if (blue | green | red) == 0:
                        break
                    
                    index = (green << 8) + blue
                    lst.append( chr(index) )
            
            all_text = ''.join(lst)
            with open(decOutPath, "w", encoding = "utf-8") as f:
                f.write(all_text)
            QMessageBox.about(self.window, "解码成功", "已成功进行编码")
        except:
            QMessageBox.critical(self.window, "解码失败", "出现错误")

    def showWindow(self):
        self.window.show()
        exit(self.app.exec())

if __name__ == "__main__":
    _NII_GuiWindow().showWindow()